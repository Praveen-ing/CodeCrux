{"ast":null,"code":"// frontend/src/api/apiService.js\nimport axios from'axios';const API_BASE_URL=process.env.REACT_APP_API_BASE_URL||'http://localhost:5001/api';const apiClient=axios.create({baseURL:API_BASE_URL,headers:{'Content-Type':'application/json'}});// Interceptor to add JWT token to requests\napiClient.interceptors.request.use(config=>{// console.log('[apiService Interceptor] Intercepting request to:', config.url); // Keep for debugging if needed\nconst userInfo=localStorage.getItem('userInfo');if(userInfo){try{const{token}=JSON.parse(userInfo);if(token){config.headers['Authorization']=`Bearer ${token}`;}}catch(e){console.error(\"Error parsing userInfo from localStorage\",e);}}return config;},error=>{return Promise.reject(error);});// --- Auth Service ---\nexport const loginUser=credentials=>apiClient.post('/auth/login',credentials);export const registerUser=userData=>apiClient.post('/auth/register',userData);export const getUserProfile=()=>apiClient.get('/auth/me');// ADD THIS FUNCTION:\nexport const updateUserProfile=profileData=>apiClient.put('/auth/profile',profileData);// --- Contest Service ---\nexport const fetchContestsAPI=params=>apiClient.get('/contests',{params});// --- Dashboard Service ---\nexport const fetchUserDashboardStatsAPI=()=>apiClient.get('/dashboard/stats');// --- Daily Challenge Service ---\nexport const fetchDailyChallengeAPI=()=>apiClient.get('/daily-challenge');export const markDailyChallengeSolvedAPI=()=>apiClient.post('/daily-challenge/solve');// --- Problem Service ---\nexport const fetchProblemsAPI=params=>apiClient.get('/problem-list',{params});export const markProblemSolvedAPI=problemData=>apiClient.post('/problem-list/solve',problemData);// --- Favorites Service ---\nexport const fetchFavoriteProblemsAPI=()=>apiClient.get('/favorites/problems');export const addProblemToFavoritesAPI=problemData=>apiClient.post('/favorites/problems',problemData);export const removeProblemFromFavoritesAPI=(platform,problemId)=>apiClient.delete(`/favorites/problems/${platform}/${encodeURIComponent(problemId)}`);export const fetchFavoriteContestsAPI=()=>apiClient.get('/favorites/contests');export const addContestToFavoritesAPI=contestData=>apiClient.post('/favorites/contests',contestData);export const removeContestFromFavoritesAPI=identifier=>apiClient.delete(`/favorites/contests/${identifier}`);export default apiClient;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","userInfo","localStorage","getItem","token","JSON","parse","e","console","error","Promise","reject","loginUser","credentials","post","registerUser","userData","getUserProfile","get","updateUserProfile","profileData","put","fetchContestsAPI","params","fetchUserDashboardStatsAPI","fetchDailyChallengeAPI","markDailyChallengeSolvedAPI","fetchProblemsAPI","markProblemSolvedAPI","problemData","fetchFavoriteProblemsAPI","addProblemToFavoritesAPI","removeProblemFromFavoritesAPI","platform","problemId","delete","encodeURIComponent","fetchFavoriteContestsAPI","addContestToFavoritesAPI","contestData","removeContestFromFavoritesAPI","identifier"],"sources":["C:/Users/HP/OneDrive/Pictures/Documents/Desktop/CodeCrux/frontend/src/api/apiService.js"],"sourcesContent":["// frontend/src/api/apiService.js\r\nimport axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:5001/api';\r\n\r\nconst apiClient = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Interceptor to add JWT token to requests\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    // console.log('[apiService Interceptor] Intercepting request to:', config.url); // Keep for debugging if needed\r\n    const userInfo = localStorage.getItem('userInfo');\r\n    if (userInfo) {\r\n      try {\r\n        const { token } = JSON.parse(userInfo);\r\n        if (token) {\r\n          config.headers['Authorization'] = `Bearer ${token}`;\r\n        }\r\n      } catch (e) {\r\n        console.error(\"Error parsing userInfo from localStorage\", e);\r\n      }\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// --- Auth Service ---\r\nexport const loginUser = (credentials) => apiClient.post('/auth/login', credentials);\r\nexport const registerUser = (userData) => apiClient.post('/auth/register', userData);\r\nexport const getUserProfile = () => apiClient.get('/auth/me');\r\n\r\n// ADD THIS FUNCTION:\r\nexport const updateUserProfile = (profileData) => apiClient.put('/auth/profile', profileData);\r\n\r\n// --- Contest Service ---\r\nexport const fetchContestsAPI = (params) => apiClient.get('/contests', { params });\r\n\r\n// --- Dashboard Service ---\r\nexport const fetchUserDashboardStatsAPI = () => apiClient.get('/dashboard/stats');\r\n\r\n// --- Daily Challenge Service ---\r\nexport const fetchDailyChallengeAPI = () => apiClient.get('/daily-challenge');\r\nexport const markDailyChallengeSolvedAPI = () => apiClient.post('/daily-challenge/solve');\r\n\r\n// --- Problem Service ---\r\nexport const fetchProblemsAPI = (params) => apiClient.get('/problem-list', { params });\r\nexport const markProblemSolvedAPI = (problemData) => apiClient.post('/problem-list/solve', problemData);\r\n\r\n// --- Favorites Service ---\r\nexport const fetchFavoriteProblemsAPI = () => apiClient.get('/favorites/problems');\r\nexport const addProblemToFavoritesAPI = (problemData) => apiClient.post('/favorites/problems', problemData);\r\nexport const removeProblemFromFavoritesAPI = (platform, problemId) => apiClient.delete(`/favorites/problems/${platform}/${encodeURIComponent(problemId)}`);\r\n\r\nexport const fetchFavoriteContestsAPI = () => apiClient.get('/favorites/contests');\r\nexport const addContestToFavoritesAPI = (contestData) => apiClient.post('/favorites/contests', contestData);\r\nexport const removeContestFromFavoritesAPI = (identifier) => apiClient.delete(`/favorites/contests/${identifier}`);\r\n\r\nexport default apiClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}