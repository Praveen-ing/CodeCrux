{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Pictures\\\\Documents\\\\Desktop\\\\CodeCrux\\\\frontend\\\\src\\\\pages\\\\ProblemList\\\\ProblemList.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/ProblemList/ProblemList.jsx\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\nimport { fetchProblemsAPI, markProblemSolvedAPI, addProblemToFavoritesAPI, removeProblemFromFavoritesAPI } from '../../api/apiService';\nimport { useAuth } from '../../context/AuthContext';\nimport './ProblemList.css';\nimport { Filter, Search, ListChecks, CheckCircle, ExternalLink, ChevronDown, ChevronUp, Star, StarOff, Loader2, Info, AlertTriangle, ChevronLeft, ChevronRight, MoreHorizontal } from 'lucide-react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PROBLEMS_PER_PAGE = 20; // Fixed 20 problems per page\n\nconst ProblemListPage = () => {\n  _s();\n  var _searchParams$get;\n  const [problems, setProblems] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const {\n    userInfo\n  } = useAuth();\n\n  // Filter states\n  const [searchTermInput, setSearchTermInput] = useState(searchParams.get('search') || '');\n  const [difficultyInput, setDifficultyInput] = useState(searchParams.get('difficulty') || '');\n  const [platformInput, setPlatformInput] = useState(searchParams.get('platform') || '');\n  const [tagsInput, setTagsInput] = useState(((_searchParams$get = searchParams.get('tags')) === null || _searchParams$get === void 0 ? void 0 : _searchParams$get.split(',').filter(Boolean)) || []);\n  const initialStatus = userInfo && !searchParams.get('status') ? '' : searchParams.get('status') || ''; // Changed default to show all\n  const [statusInput, setStatusInput] = useState(initialStatus);\n  const [showFilters, setShowFilters] = useState(true);\n\n  // Pagination states\n  const [totalProblems, setTotalProblems] = useState(0);\n  const [currentPage, setCurrentPage] = useState(parseInt(searchParams.get('page') || '1'));\n  const [totalPages, setTotalPages] = useState(0);\n  const availableDifficulties = ['All', 'Easy', 'Medium', 'Hard', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2100', '2200', '2300', '2400', '2500', '2600+'];\n  const availablePlatforms = ['All', 'Codeforces', 'LeetCode', 'AtCoder', 'GeeksforGeeks', 'HackerRank', 'CodeChef', 'HackerEarth', 'SPOJ', 'TopCoder'];\n  const availableTags = ['arrays', 'strings', 'dp', 'graphs', 'trees', 'math', 'greedy', 'sorting', 'searching', 'two pointers', 'implementation', 'constructive algorithms', 'binary search', 'bit manipulation', 'number theory', 'geometry', 'combinatorics', 'data structures', 'brute force', 'dfs and similar'];\n  const fetchProblems = useCallback(async filtersForAPI => {\n    setIsLoading(true);\n    setError(null);\n    console.log(\"Fetching problems with filters:\", filtersForAPI);\n    try {\n      const response = await fetchProblemsAPI(filtersForAPI);\n      console.log(\"API Response:\", response.data);\n      setProblems(response.data.data || []);\n      setTotalProblems(response.data.totalProblems || 0);\n      setCurrentPage(response.data.currentPage || 1);\n      setTotalPages(response.data.totalPages || 0);\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Error fetching problems:\", err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch problems. Please try again.');\n      setProblems([]);\n      setTotalProblems(0);\n      setTotalPages(0);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    var _searchParams$get2;\n    console.log(\"searchParams changed:\", searchParams.toString());\n    const currentPageFromParams = parseInt(searchParams.get('page') || '1');\n    const currentSearchTerm = searchParams.get('search') || '';\n    const currentDifficulty = searchParams.get('difficulty') || '';\n    const currentPlatform = searchParams.get('platform') || '';\n    const currentTags = ((_searchParams$get2 = searchParams.get('tags')) === null || _searchParams$get2 === void 0 ? void 0 : _searchParams$get2.split(',').filter(Boolean)) || [];\n    const currentStatus = searchParams.get('status') || '';\n\n    // Update local input states\n    setSearchTermInput(currentSearchTerm);\n    setDifficultyInput(currentDifficulty);\n    setPlatformInput(currentPlatform);\n    setTagsInput(currentTags);\n    setStatusInput(currentStatus);\n    setCurrentPage(currentPageFromParams);\n    const paramsForAPI = {\n      page: currentPageFromParams,\n      limit: PROBLEMS_PER_PAGE\n    };\n    if (currentSearchTerm) paramsForAPI.search = currentSearchTerm;\n    if (currentDifficulty && currentDifficulty !== 'All') paramsForAPI.difficulty = currentDifficulty;\n    if (currentPlatform && currentPlatform !== 'All') paramsForAPI.platform = currentPlatform;\n    if (currentTags.length > 0) paramsForAPI.tags = currentTags.join(',');\n    if (currentStatus) paramsForAPI.status = currentStatus;\n    fetchProblems(paramsForAPI);\n  }, [searchParams, fetchProblems, userInfo]);\n  const handleApplyFilters = () => {\n    const newParams = {\n      page: '1'\n    }; // Reset to page 1 when filters change\n    if (searchTermInput) newParams.search = searchTermInput;\n    if (difficultyInput && difficultyInput !== 'All') newParams.difficulty = difficultyInput;\n    if (platformInput && platformInput !== 'All') newParams.platform = platformInput;\n    if (tagsInput.length > 0) newParams.tags = tagsInput.join(',');\n    if (statusInput) newParams.status = statusInput;\n    setSearchParams(newParams, {\n      replace: true\n    });\n  };\n  const handlePageChange = newPage => {\n    if (newPage >= 1 && newPage <= totalPages) {\n      const newParams = new URLSearchParams(searchParams);\n      newParams.set('page', String(newPage));\n      setSearchParams(newParams);\n      // Scroll to top when page changes\n      window.scrollTo({\n        top: 0,\n        behavior: 'smooth'\n      });\n    }\n  };\n  const handleTagInputChange = tag => {\n    setTagsInput(prevTags => prevTags.includes(tag) ? prevTags.filter(t => t !== tag) : [...prevTags, tag]);\n  };\n  const handleMarkAsSolved = async (problemId, problemPlatform) => {\n    if (!userInfo) {\n      navigate('/login', {\n        state: {\n          from: location\n        }\n      });\n      return;\n    }\n    try {\n      const problemToMark = problems.find(p => p.problemId === problemId && p.platform === problemPlatform);\n      await markProblemSolvedAPI({\n        problemId,\n        platform: problemPlatform,\n        title: problemToMark === null || problemToMark === void 0 ? void 0 : problemToMark.title\n      });\n\n      // Optimistically update UI\n      setProblems(prev => prev.map(p => p.problemId === problemId && p.platform === problemPlatform ? {\n        ...p,\n        isSolvedByCurrentUser: true\n      } : p));\n\n      // If status is 'unsolved', refetch to remove it from list\n      if (statusInput === 'unsolved') {\n        const currentFilters = Object.fromEntries(searchParams.entries());\n        fetchProblems({\n          ...currentFilters,\n          page: currentPage,\n          limit: PROBLEMS_PER_PAGE\n        });\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Error marking problem as solved:\", err);\n      alert(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Could not mark as solved.\");\n    }\n  };\n  const handleToggleFavorite = async problem => {\n    if (!userInfo) {\n      navigate('/login', {\n        state: {\n          from: location\n        }\n      });\n      return;\n    }\n    const problemDetails = {\n      problemId: problem.problemId,\n      platform: problem.platform,\n      title: problem.title,\n      url: problem.url,\n      difficulty: problem.difficulty\n    };\n    try {\n      if (problem.isFavoritedByCurrentUser) {\n        await removeProblemFromFavoritesAPI(problem.platform, problem.problemId);\n        setProblems(prev => prev.map(p => p.problemId === problem.problemId && p.platform === problem.platform ? {\n          ...p,\n          isFavoritedByCurrentUser: false\n        } : p));\n      } else {\n        await addProblemToFavoritesAPI(problemDetails);\n        setProblems(prev => prev.map(p => p.problemId === problem.problemId && p.platform === problem.platform ? {\n          ...p,\n          isFavoritedByCurrentUser: true\n        } : p));\n      }\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      console.error(\"Error toggling favorite:\", err);\n      alert(((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || \"Could not update favorite status.\");\n    }\n  };\n\n  // Pagination helper function\n  const getPageNumbers = () => {\n    const delta = 2; // Number of pages to show on each side of current page\n    const range = [];\n    const rangeWithDots = [];\n    for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {\n      range.push(i);\n    }\n    if (currentPage - delta > 2) {\n      rangeWithDots.push(1, '...');\n    } else {\n      rangeWithDots.push(1);\n    }\n    rangeWithDots.push(...range);\n    if (currentPage + delta < totalPages - 1) {\n      rangeWithDots.push('...', totalPages);\n    } else if (totalPages > 1) {\n      rangeWithDots.push(totalPages);\n    }\n    return rangeWithDots;\n  };\n  const clearAllFilters = () => {\n    setSearchTermInput('');\n    setDifficultyInput('');\n    setPlatformInput('');\n    setTagsInput([]);\n    setStatusInput('');\n    setSearchParams({\n      page: '1'\n    }, {\n      replace: true\n    });\n  };\n  const getStatusText = () => {\n    if (statusInput === 'solved') return 'Solved Problems';\n    if (statusInput === 'unsolved') return 'Unsolved Problems';\n    return 'All Problems';\n  };\n  const getDifficultyColor = difficulty => {\n    const difficultyLower = difficulty === null || difficulty === void 0 ? void 0 : difficulty.toLowerCase();\n    if (difficultyLower === 'easy') return 'difficulty-easy';\n    if (difficultyLower === 'medium') return 'difficulty-medium';\n    if (difficultyLower === 'hard') return 'difficulty-hard';\n\n    // Handle Codeforces rating-based difficulties\n    const rating = parseInt(difficulty);\n    if (!isNaN(rating)) {\n      if (rating <= 1200) return 'difficulty-easy';\n      if (rating <= 1600) return 'difficulty-medium';\n      return 'difficulty-hard';\n    }\n    return 'difficulty-unknown';\n  };\n  console.log(\"Rendering ProblemList:\", {\n    isLoading,\n    error,\n    problemsCount: problems.length,\n    totalProblems,\n    currentPage,\n    totalPages\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"problem-list-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"problem-list-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [getStatusText(), totalProblems > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"problem-count-info\",\n          children: [\"- Page \", currentPage, \" of \", totalPages, \" (\", totalProblems, \" total problems)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-filters-btn\",\n          onClick: clearAllFilters,\n          children: \"Clear All Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-filters-btn\",\n          onClick: () => setShowFilters(!showFilters),\n          children: [/*#__PURE__*/_jsxDEV(Filter, {\n            size: 20\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 25\n          }, this), showFilters ? 'Hide' : 'Show', \" Filters\", showFilters ? /*#__PURE__*/_jsxDEV(ChevronUp, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 40\n          }, this) : /*#__PURE__*/_jsxDEV(ChevronDown, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }, this), showFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group search-filter\",\n          children: [/*#__PURE__*/_jsxDEV(Search, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Search problems by name or ID...\",\n            value: searchTermInput,\n            onChange: e => setSearchTermInput(e.target.value),\n            onKeyPress: e => e.key === 'Enter' && handleApplyFilters()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"difficulty\",\n            children: \"Difficulty:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"difficulty\",\n            value: difficultyInput,\n            onChange: e => setDifficultyInput(e.target.value),\n            children: availableDifficulties.map(d => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: d === 'All' ? '' : d,\n              children: d\n            }, d, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 65\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"platform\",\n            children: \"Platform:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"platform\",\n            value: platformInput,\n            onChange: e => setPlatformInput(e.target.value),\n            children: availablePlatforms.map(p => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: p === 'All' ? '' : p,\n              children: p\n            }, p, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 62\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 25\n        }, this), userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"filter-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"status\",\n            children: \"Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"status\",\n            value: statusInput,\n            onChange: e => setStatusInput(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"solved\",\n              children: \"Solved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"unsolved\",\n              children: \"Unsolved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-group tags-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Tags:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags-options\",\n          children: availableTags.map(tag => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `tag-btn ${tagsInput.includes(tag) ? 'active' : ''}`,\n            onClick: () => handleTagInputChange(tag),\n            children: tag\n          }, tag, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filter-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-filters-btn\",\n          onClick: handleApplyFilters,\n          children: \"Apply Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-filters-btn secondary\",\n          onClick: clearAllFilters,\n          children: \"Clear All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-problems\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 32,\n        className: \"spinner-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this), \"Loading problems...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-problems\",\n      children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n        size: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 21\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 17\n    }, this), !isLoading && !error && problems.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-problems-found\",\n      children: [/*#__PURE__*/_jsxDEV(Info, {\n        size: 24\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"No problems found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }, this), totalProblems === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No problems match your current filters.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Try adjusting your filters or go to a different page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearAllFilters,\n        className: \"clear-filters-btn\",\n        children: \"Clear All Filters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 17\n    }, this), !isLoading && !error && problems.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-info\",\n          children: [\"Showing \", (currentPage - 1) * PROBLEMS_PER_PAGE + 1, \" - \", Math.min(currentPage * PROBLEMS_PER_PAGE, totalProblems), \" of \", totalProblems, \" problems\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage - 1),\n            disabled: currentPage <= 1,\n            className: \"pagination-btn\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 37\n            }, this), \" Previous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 33\n          }, this), getPageNumbers().map((pageNum, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => typeof pageNum === 'number' && handlePageChange(pageNum),\n            disabled: pageNum === '...',\n            className: `pagination-btn ${pageNum === currentPage ? 'active' : ''} ${pageNum === '...' ? 'dots' : ''}`,\n            children: pageNum === '...' ? /*#__PURE__*/_jsxDEV(MoreHorizontal, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 62\n            }, this) : pageNum\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage + 1),\n            disabled: currentPage >= totalPages,\n            className: \"pagination-btn\",\n            children: [\"Next \", /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"problems-list-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"problem-list-row header-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-list-status-col\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-list-title-col\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-list-platform-col\",\n            children: \"Platform\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-list-difficulty-col\",\n            children: \"Difficulty\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-list-tags-col\",\n            children: \"Tags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"problem-list-actions-col\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 25\n        }, this), problems.map(problem => {\n          var _problem$platform, _problem$tags, _problem$tags2;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `problem-list-row ${problem.isSolvedByCurrentUser ? 'solved' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-list-status-col\",\n              children: problem.isSolvedByCurrentUser ? /*#__PURE__*/_jsxDEV(CheckCircle, {\n                size: 20,\n                className: \"solved-icon\",\n                title: \"Solved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"unsolved-icon\",\n                title: \"Unsolved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-list-title-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"a\", {\n                href: problem.url,\n                target: \"_blank\",\n                rel: \"noopener noreferrer\",\n                className: \"problem-title-link\",\n                children: [problem.title, /*#__PURE__*/_jsxDEV(ExternalLink, {\n                  size: 14,\n                  className: \"external-link-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"problem-id\",\n                children: problem.problemId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-list-platform-col\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `platform-badge platform-${(_problem$platform = problem.platform) === null || _problem$platform === void 0 ? void 0 : _problem$platform.toLowerCase()}`,\n                children: problem.platform\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-list-difficulty-col\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `difficulty-badge ${getDifficultyColor(problem.difficulty)}`,\n                children: problem.difficulty\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-list-tags-col\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"tags-container\",\n                children: [(_problem$tags = problem.tags) === null || _problem$tags === void 0 ? void 0 : _problem$tags.slice(0, 3).map((tag, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-badge\",\n                  children: tag\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 45\n                }, this)), ((_problem$tags2 = problem.tags) === null || _problem$tags2 === void 0 ? void 0 : _problem$tags2.length) > 3 && /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"tag-badge more-tags\",\n                  children: [\"+\", problem.tags.length - 3, \" more\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 439,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"problem-list-actions-col\",\n              children: userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"problem-actions\",\n                children: [!problem.isSolvedByCurrentUser && /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleMarkAsSolved(problem.problemId, problem.platform),\n                  className: \"action-btn solve-btn\",\n                  title: \"Mark as solved\",\n                  children: /*#__PURE__*/_jsxDEV(ListChecks, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 449,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleToggleFavorite(problem),\n                  className: `action-btn favorite-btn ${problem.isFavoritedByCurrentUser ? 'favorited' : ''}`,\n                  title: problem.isFavoritedByCurrentUser ? \"Remove from favorites\" : \"Add to favorites\",\n                  children: problem.isFavoritedByCurrentUser ? /*#__PURE__*/_jsxDEV(Star, {\n                    size: 16,\n                    className: \"star-filled\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 463,\n                    columnNumber: 53\n                  }, this) : /*#__PURE__*/_jsxDEV(StarOff, {\n                    size: 16\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 465,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 457,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 33\n            }, this)]\n          }, `${problem.platform}-${problem.problemId}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 29\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 21\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pagination-controls bottom\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-info\",\n          children: [\"Showing \", (currentPage - 1) * PROBLEMS_PER_PAGE + 1, \" - \", Math.min(currentPage * PROBLEMS_PER_PAGE, totalProblems), \" of \", totalProblems, \" problems\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage - 1),\n            disabled: currentPage <= 1,\n            className: \"pagination-btn\",\n            children: [/*#__PURE__*/_jsxDEV(ChevronLeft, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 487,\n              columnNumber: 37\n            }, this), \" Previous\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 33\n          }, this), getPageNumbers().map((pageNum, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => typeof pageNum === 'number' && handlePageChange(pageNum),\n            disabled: pageNum === '...',\n            className: `pagination-btn ${pageNum === currentPage ? 'active' : ''} ${pageNum === '...' ? 'dots' : ''}`,\n            children: pageNum === '...' ? /*#__PURE__*/_jsxDEV(MoreHorizontal, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 62\n            }, this) : pageNum\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 37\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handlePageChange(currentPage + 1),\n            disabled: currentPage >= totalPages,\n            className: \"pagination-btn\",\n            children: [\"Next \", /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 18\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 9\n  }, this);\n};\n_s(ProblemListPage, \"kfG3AvcRt3YIFGnDceX2ku90mo0=\", false, function () {\n  return [useSearchParams, useNavigate, useLocation, useAuth];\n});\n_c = ProblemListPage;\nexport default ProblemListPage;\nvar _c;\n$RefreshReg$(_c, \"ProblemListPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useSearchParams","useNavigate","useLocation","fetchProblemsAPI","markProblemSolvedAPI","addProblemToFavoritesAPI","removeProblemFromFavoritesAPI","useAuth","Filter","Search","ListChecks","CheckCircle","ExternalLink","ChevronDown","ChevronUp","Star","StarOff","Loader2","Info","AlertTriangle","ChevronLeft","ChevronRight","MoreHorizontal","jsxDEV","_jsxDEV","Fragment","_Fragment","PROBLEMS_PER_PAGE","ProblemListPage","_s","_searchParams$get","problems","setProblems","isLoading","setIsLoading","error","setError","searchParams","setSearchParams","navigate","location","userInfo","searchTermInput","setSearchTermInput","get","difficultyInput","setDifficultyInput","platformInput","setPlatformInput","tagsInput","setTagsInput","split","filter","Boolean","initialStatus","statusInput","setStatusInput","showFilters","setShowFilters","totalProblems","setTotalProblems","currentPage","setCurrentPage","parseInt","totalPages","setTotalPages","availableDifficulties","availablePlatforms","availableTags","fetchProblems","filtersForAPI","console","log","response","data","err","_err$response","_err$response$data","message","_searchParams$get2","toString","currentPageFromParams","currentSearchTerm","currentDifficulty","currentPlatform","currentTags","currentStatus","paramsForAPI","page","limit","search","difficulty","platform","length","tags","join","status","handleApplyFilters","newParams","replace","handlePageChange","newPage","URLSearchParams","set","String","window","scrollTo","top","behavior","handleTagInputChange","tag","prevTags","includes","t","handleMarkAsSolved","problemId","problemPlatform","state","from","problemToMark","find","p","title","prev","map","isSolvedByCurrentUser","currentFilters","Object","fromEntries","entries","_err$response2","_err$response2$data","alert","handleToggleFavorite","problem","problemDetails","url","isFavoritedByCurrentUser","_err$response3","_err$response3$data","getPageNumbers","delta","range","rangeWithDots","i","Math","max","min","push","clearAllFilters","getStatusText","getDifficultyColor","difficultyLower","toLowerCase","rating","isNaN","problemsCount","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","size","type","placeholder","value","onChange","e","target","onKeyPress","key","htmlFor","id","d","disabled","pageNum","index","_problem$platform","_problem$tags","_problem$tags2","href","rel","slice","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Pictures/Documents/Desktop/CodeCrux/frontend/src/pages/ProblemList/ProblemList.jsx"],"sourcesContent":["// frontend/src/pages/ProblemList/ProblemList.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n    fetchProblemsAPI,\r\n    markProblemSolvedAPI,\r\n    addProblemToFavoritesAPI,\r\n    removeProblemFromFavoritesAPI\r\n} from '../../api/apiService';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport './ProblemList.css';\r\nimport {\r\n    Filter, Search, ListChecks, CheckCircle, ExternalLink,\r\n    ChevronDown, ChevronUp, Star, StarOff, Loader2, Info, AlertTriangle,\r\n    ChevronLeft, ChevronRight, MoreHorizontal\r\n} from 'lucide-react';\r\n\r\nconst PROBLEMS_PER_PAGE = 20; // Fixed 20 problems per page\r\n\r\nconst ProblemListPage = () => {\r\n    const [problems, setProblems] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { userInfo } = useAuth();\r\n\r\n    // Filter states\r\n    const [searchTermInput, setSearchTermInput] = useState(searchParams.get('search') || '');\r\n    const [difficultyInput, setDifficultyInput] = useState(searchParams.get('difficulty') || '');\r\n    const [platformInput, setPlatformInput] = useState(searchParams.get('platform') || '');\r\n    const [tagsInput, setTagsInput] = useState(searchParams.get('tags')?.split(',').filter(Boolean) || []);\r\n    const initialStatus = userInfo && !searchParams.get('status') ? '' : (searchParams.get('status') || ''); // Changed default to show all\r\n    const [statusInput, setStatusInput] = useState(initialStatus);\r\n    const [showFilters, setShowFilters] = useState(true);\r\n\r\n    // Pagination states\r\n    const [totalProblems, setTotalProblems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(parseInt(searchParams.get('page') || '1'));\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    const availableDifficulties = ['All', 'Easy', 'Medium', 'Hard', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2100', '2200', '2300', '2400', '2500', '2600+'];\r\n    const availablePlatforms = ['All', 'Codeforces', 'LeetCode', 'AtCoder', 'GeeksforGeeks', 'HackerRank', 'CodeChef', 'HackerEarth', 'SPOJ', 'TopCoder'];\r\n    const availableTags = ['arrays', 'strings', 'dp', 'graphs', 'trees', 'math', 'greedy', 'sorting', 'searching', 'two pointers', 'implementation', 'constructive algorithms', 'binary search', 'bit manipulation', 'number theory', 'geometry', 'combinatorics', 'data structures', 'brute force', 'dfs and similar'];\r\n\r\n    const fetchProblems = useCallback(async (filtersForAPI) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        console.log(\"Fetching problems with filters:\", filtersForAPI);\r\n        try {\r\n            const response = await fetchProblemsAPI(filtersForAPI);\r\n            console.log(\"API Response:\", response.data);\r\n            setProblems(response.data.data || []);\r\n            setTotalProblems(response.data.totalProblems || 0);\r\n            setCurrentPage(response.data.currentPage || 1);\r\n            setTotalPages(response.data.totalPages || 0);\r\n        } catch (err) {\r\n            console.error(\"Error fetching problems:\", err);\r\n            setError(err.response?.data?.message || 'Failed to fetch problems. Please try again.');\r\n            setProblems([]);\r\n            setTotalProblems(0);\r\n            setTotalPages(0);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"searchParams changed:\", searchParams.toString());\r\n        const currentPageFromParams = parseInt(searchParams.get('page') || '1');\r\n        const currentSearchTerm = searchParams.get('search') || '';\r\n        const currentDifficulty = searchParams.get('difficulty') || '';\r\n        const currentPlatform = searchParams.get('platform') || '';\r\n        const currentTags = searchParams.get('tags')?.split(',').filter(Boolean) || [];\r\n        const currentStatus = searchParams.get('status') || '';\r\n\r\n        // Update local input states\r\n        setSearchTermInput(currentSearchTerm);\r\n        setDifficultyInput(currentDifficulty);\r\n        setPlatformInput(currentPlatform);\r\n        setTagsInput(currentTags);\r\n        setStatusInput(currentStatus);\r\n        setCurrentPage(currentPageFromParams);\r\n\r\n        const paramsForAPI = { page: currentPageFromParams, limit: PROBLEMS_PER_PAGE };\r\n        if (currentSearchTerm) paramsForAPI.search = currentSearchTerm;\r\n        if (currentDifficulty && currentDifficulty !== 'All') paramsForAPI.difficulty = currentDifficulty;\r\n        if (currentPlatform && currentPlatform !== 'All') paramsForAPI.platform = currentPlatform;\r\n        if (currentTags.length > 0) paramsForAPI.tags = currentTags.join(',');\r\n        if (currentStatus) paramsForAPI.status = currentStatus;\r\n\r\n        fetchProblems(paramsForAPI);\r\n    }, [searchParams, fetchProblems, userInfo]);\r\n\r\n    const handleApplyFilters = () => {\r\n        const newParams = { page: '1' }; // Reset to page 1 when filters change\r\n        if (searchTermInput) newParams.search = searchTermInput;\r\n        if (difficultyInput && difficultyInput !== 'All') newParams.difficulty = difficultyInput;\r\n        if (platformInput && platformInput !== 'All') newParams.platform = platformInput;\r\n        if (tagsInput.length > 0) newParams.tags = tagsInput.join(',');\r\n        if (statusInput) newParams.status = statusInput;\r\n        setSearchParams(newParams, { replace: true });\r\n    };\r\n\r\n    const handlePageChange = (newPage) => {\r\n        if (newPage >= 1 && newPage <= totalPages) {\r\n            const newParams = new URLSearchParams(searchParams);\r\n            newParams.set('page', String(newPage));\r\n            setSearchParams(newParams);\r\n            // Scroll to top when page changes\r\n            window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const handleTagInputChange = (tag) => {\r\n        setTagsInput(prevTags =>\r\n            prevTags.includes(tag) ? prevTags.filter(t => t !== tag) : [...prevTags, tag]\r\n        );\r\n    };\r\n\r\n    const handleMarkAsSolved = async (problemId, problemPlatform) => {\r\n        if (!userInfo) {\r\n            navigate('/login', { state: { from: location } });\r\n            return;\r\n        }\r\n        try {\r\n            const problemToMark = problems.find(p => p.problemId === problemId && p.platform === problemPlatform);\r\n            await markProblemSolvedAPI({ problemId, platform: problemPlatform, title: problemToMark?.title });\r\n            \r\n            // Optimistically update UI\r\n            setProblems(prev => prev.map(p =>\r\n                (p.problemId === problemId && p.platform === problemPlatform) ? { ...p, isSolvedByCurrentUser: true } : p\r\n            ));\r\n            \r\n            // If status is 'unsolved', refetch to remove it from list\r\n            if (statusInput === 'unsolved') {\r\n                const currentFilters = Object.fromEntries(searchParams.entries());\r\n                fetchProblems({ ...currentFilters, page: currentPage, limit: PROBLEMS_PER_PAGE });\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error marking problem as solved:\", err);\r\n            alert(err.response?.data?.message || \"Could not mark as solved.\");\r\n        }\r\n    };\r\n\r\n    const handleToggleFavorite = async (problem) => {\r\n        if (!userInfo) {\r\n            navigate('/login', { state: { from: location } });\r\n            return;\r\n        }\r\n        const problemDetails = {\r\n            problemId: problem.problemId,\r\n            platform: problem.platform,\r\n            title: problem.title,\r\n            url: problem.url,\r\n            difficulty: problem.difficulty\r\n        };\r\n\r\n        try {\r\n            if (problem.isFavoritedByCurrentUser) {\r\n                await removeProblemFromFavoritesAPI(problem.platform, problem.problemId);\r\n                setProblems(prev => prev.map(p =>\r\n                    (p.problemId === problem.problemId && p.platform === problem.platform) ? { ...p, isFavoritedByCurrentUser: false } : p\r\n                ));\r\n            } else {\r\n                await addProblemToFavoritesAPI(problemDetails);\r\n                setProblems(prev => prev.map(p =>\r\n                    (p.problemId === problem.problemId && p.platform === problem.platform) ? { ...p, isFavoritedByCurrentUser: true } : p\r\n                ));\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error toggling favorite:\", err);\r\n            alert(err.response?.data?.message || \"Could not update favorite status.\");\r\n        }\r\n    };\r\n\r\n    // Pagination helper function\r\n    const getPageNumbers = () => {\r\n        const delta = 2; // Number of pages to show on each side of current page\r\n        const range = [];\r\n        const rangeWithDots = [];\r\n\r\n        for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {\r\n            range.push(i);\r\n        }\r\n\r\n        if (currentPage - delta > 2) {\r\n            rangeWithDots.push(1, '...');\r\n        } else {\r\n            rangeWithDots.push(1);\r\n        }\r\n\r\n        rangeWithDots.push(...range);\r\n\r\n        if (currentPage + delta < totalPages - 1) {\r\n            rangeWithDots.push('...', totalPages);\r\n        } else if (totalPages > 1) {\r\n            rangeWithDots.push(totalPages);\r\n        }\r\n\r\n        return rangeWithDots;\r\n    };\r\n\r\n    const clearAllFilters = () => {\r\n        setSearchTermInput('');\r\n        setDifficultyInput('');\r\n        setPlatformInput('');\r\n        setTagsInput([]);\r\n        setStatusInput('');\r\n        setSearchParams({ page: '1' }, { replace: true });\r\n    };\r\n\r\n    const getStatusText = () => {\r\n        if (statusInput === 'solved') return 'Solved Problems';\r\n        if (statusInput === 'unsolved') return 'Unsolved Problems';\r\n        return 'All Problems';\r\n    };\r\n\r\n    const getDifficultyColor = (difficulty) => {\r\n        const difficultyLower = difficulty?.toLowerCase();\r\n        if (difficultyLower === 'easy') return 'difficulty-easy';\r\n        if (difficultyLower === 'medium') return 'difficulty-medium';\r\n        if (difficultyLower === 'hard') return 'difficulty-hard';\r\n        \r\n        // Handle Codeforces rating-based difficulties\r\n        const rating = parseInt(difficulty);\r\n        if (!isNaN(rating)) {\r\n            if (rating <= 1200) return 'difficulty-easy';\r\n            if (rating <= 1600) return 'difficulty-medium';\r\n            return 'difficulty-hard';\r\n        }\r\n        \r\n        return 'difficulty-unknown';\r\n    };\r\n\r\n    console.log(\"Rendering ProblemList:\", { isLoading, error, problemsCount: problems.length, totalProblems, currentPage, totalPages });\r\n\r\n    return (\r\n        <div className=\"problem-list-page\">\r\n            <header className=\"problem-list-header\">\r\n                <h1>\r\n                    {getStatusText()}\r\n                    {totalProblems > 0 && (\r\n                        <span className=\"problem-count-info\">\r\n                            - Page {currentPage} of {totalPages} ({totalProblems} total problems)\r\n                        </span>\r\n                    )}\r\n                </h1>\r\n                <div className=\"header-actions\">\r\n                    <button className=\"clear-filters-btn\" onClick={clearAllFilters}>\r\n                        Clear All Filters\r\n                    </button>\r\n                    <button className=\"toggle-filters-btn\" onClick={() => setShowFilters(!showFilters)}>\r\n                        <Filter size={20} />\r\n                        {showFilters ? 'Hide' : 'Show'} Filters\r\n                        {showFilters ? <ChevronUp size={18} /> : <ChevronDown size={18} />}\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {showFilters && (\r\n                <div className=\"filters-container\">\r\n                    <div className=\"filter-row\">\r\n                        <div className=\"filter-group search-filter\">\r\n                            <Search size={18} />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search problems by name or ID...\"\r\n                                value={searchTermInput}\r\n                                onChange={(e) => setSearchTermInput(e.target.value)}\r\n                                onKeyPress={(e) => e.key === 'Enter' && handleApplyFilters()}\r\n                            />\r\n                        </div>\r\n                        <div className=\"filter-group\">\r\n                            <label htmlFor=\"difficulty\">Difficulty:</label>\r\n                            <select id=\"difficulty\" value={difficultyInput} onChange={(e) => setDifficultyInput(e.target.value)}>\r\n                                {availableDifficulties.map(d => <option key={d} value={d === 'All' ? '' : d}>{d}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"filter-group\">\r\n                            <label htmlFor=\"platform\">Platform:</label>\r\n                            <select id=\"platform\" value={platformInput} onChange={(e) => setPlatformInput(e.target.value)}>\r\n                                {availablePlatforms.map(p => <option key={p} value={p === 'All' ? '' : p}>{p}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {userInfo && (\r\n                            <div className=\"filter-group\">\r\n                                <label htmlFor=\"status\">Status:</label>\r\n                                <select id=\"status\" value={statusInput} onChange={(e) => setStatusInput(e.target.value)}>\r\n                                    <option value=\"\">All</option>\r\n                                    <option value=\"solved\">Solved</option>\r\n                                    <option value=\"unsolved\">Unsolved</option>\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"filter-group tags-filter\">\r\n                        <label>Tags:</label>\r\n                        <div className=\"tags-options\">\r\n                            {availableTags.map(tag => (\r\n                                <button\r\n                                    key={tag}\r\n                                    className={`tag-btn ${tagsInput.includes(tag) ? 'active' : ''}`}\r\n                                    onClick={() => handleTagInputChange(tag)}\r\n                                >\r\n                                    {tag}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"filter-actions\">\r\n                        <button className=\"apply-filters-btn\" onClick={handleApplyFilters}>\r\n                            Apply Filters\r\n                        </button>\r\n                        <button className=\"clear-filters-btn secondary\" onClick={clearAllFilters}>\r\n                            Clear All\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isLoading && (\r\n                <div className=\"loading-problems\">\r\n                    <Loader2 size={32} className=\"spinner-icon\" />\r\n                    Loading problems...\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div className=\"error-problems\">\r\n                    <AlertTriangle size={20} />\r\n                    {error}\r\n                </div>\r\n            )}\r\n\r\n            {!isLoading && !error && problems.length === 0 && (\r\n                <div className=\"no-problems-found\">\r\n                    <Info size={24} />\r\n                    <h3>No problems found</h3>\r\n                    {totalProblems === 0 ? (\r\n                        <p>No problems match your current filters.</p>\r\n                    ) : (\r\n                        <p>Try adjusting your filters or go to a different page.</p>\r\n                    )}\r\n                    <button onClick={clearAllFilters} className=\"clear-filters-btn\">\r\n                        Clear All Filters\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {!isLoading && !error && problems.length > 0 && (\r\n                <>\r\n                    {/* Improved Pagination Controls - Top */}\r\n                    {totalPages > 1 && (\r\n                        <div className=\"pagination-controls top\">\r\n                            <div className=\"pagination-info\">\r\n                                Showing {((currentPage - 1) * PROBLEMS_PER_PAGE) + 1} - {Math.min(currentPage * PROBLEMS_PER_PAGE, totalProblems)} of {totalProblems} problems\r\n                            </div>\r\n                            <div className=\"pagination-buttons\">\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage - 1)}\r\n                                    disabled={currentPage <= 1}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    <ChevronLeft size={18} /> Previous\r\n                                </button>\r\n\r\n                                {getPageNumbers().map((pageNum, index) => (\r\n                                    <button\r\n                                        key={index}\r\n                                        onClick={() => typeof pageNum === 'number' && handlePageChange(pageNum)}\r\n                                        disabled={pageNum === '...'}\r\n                                        className={`pagination-btn ${pageNum === currentPage ? 'active' : ''} ${pageNum === '...' ? 'dots' : ''}`}\r\n                                    >\r\n                                        {pageNum === '...' ? <MoreHorizontal size={16} /> : pageNum}\r\n                                    </button>\r\n                                ))}\r\n\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage + 1)}\r\n                                    disabled={currentPage >= totalPages}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    Next <ChevronRight size={18} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"problems-list-view\">\r\n                        <div className=\"problem-list-row header-row\">\r\n                            <div className=\"problem-list-status-col\">Status</div>\r\n                            <div className=\"problem-list-title-col\">Title</div>\r\n                            <div className=\"problem-list-platform-col\">Platform</div>\r\n                            <div className=\"problem-list-difficulty-col\">Difficulty</div>\r\n                            <div className=\"problem-list-tags-col\">Tags</div>\r\n                            <div className=\"problem-list-actions-col\">Actions</div>\r\n                        </div>\r\n                        {problems.map((problem) => (\r\n                            <div key={`${problem.platform}-${problem.problemId}`} className={`problem-list-row ${problem.isSolvedByCurrentUser ? 'solved' : ''}`}>\r\n                                <div className=\"problem-list-status-col\">\r\n                                    {problem.isSolvedByCurrentUser ? (\r\n                                        <CheckCircle size={20} className=\"solved-icon\" title=\"Solved\" />\r\n                                    ) : (\r\n                                        <div className=\"unsolved-icon\" title=\"Unsolved\"></div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"problem-list-title-col\">\r\n                                    <a\r\n                                        href={problem.url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"problem-title-link\"\r\n                                    >\r\n                                        {problem.title}\r\n                                        <ExternalLink size={14} className=\"external-link-icon\" />\r\n                                    </a>\r\n                                    <div className=\"problem-id\">{problem.problemId}</div>\r\n                                </div>\r\n                                <div className=\"problem-list-platform-col\">\r\n                                    <span className={`platform-badge platform-${problem.platform?.toLowerCase()}`}>\r\n                                        {problem.platform}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"problem-list-difficulty-col\">\r\n                                    <span className={`difficulty-badge ${getDifficultyColor(problem.difficulty)}`}>\r\n                                        {problem.difficulty}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"problem-list-tags-col\">\r\n                                    <div className=\"tags-container\">\r\n                                        {problem.tags?.slice(0, 3).map((tag, index) => (\r\n                                            <span key={index} className=\"tag-badge\">\r\n                                                {tag}\r\n                                            </span>\r\n                                        ))}\r\n                                        {problem.tags?.length > 3 && (\r\n                                            <span className=\"tag-badge more-tags\">\r\n                                                +{problem.tags.length - 3} more\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"problem-list-actions-col\">\r\n                                    {userInfo && (\r\n                                        <div className=\"problem-actions\">\r\n                                            {!problem.isSolvedByCurrentUser && (\r\n                                                <button\r\n                                                    onClick={() => handleMarkAsSolved(problem.problemId, problem.platform)}\r\n                                                    className=\"action-btn solve-btn\"\r\n                                                    title=\"Mark as solved\"\r\n                                                >\r\n                                                    <ListChecks size={16} />\r\n                                                </button>\r\n                                            )}\r\n                                            <button\r\n                                                onClick={() => handleToggleFavorite(problem)}\r\n                                                className={`action-btn favorite-btn ${problem.isFavoritedByCurrentUser ? 'favorited' : ''}`}\r\n                                                title={problem.isFavoritedByCurrentUser ? \"Remove from favorites\" : \"Add to favorites\"}\r\n                                            >\r\n                                                {problem.isFavoritedByCurrentUser ? (\r\n                                                    <Star size={16} className=\"star-filled\" />\r\n                                                ) : (\r\n                                                    <StarOff size={16} />\r\n                                                )}\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Improved Pagination Controls - Bottom */}\r\n                    {totalPages > 1 && (\r\n                        <div className=\"pagination-controls bottom\">\r\n                            <div className=\"pagination-info\">\r\n                                Showing {((currentPage - 1) * PROBLEMS_PER_PAGE) + 1} - {Math.min(currentPage * PROBLEMS_PER_PAGE, totalProblems)} of {totalProblems} problems\r\n                            </div>\r\n                            <div className=\"pagination-buttons\">\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage - 1)}\r\n                                    disabled={currentPage <= 1}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    <ChevronLeft size={18} /> Previous\r\n                                </button>\r\n\r\n                                {getPageNumbers().map((pageNum, index) => (\r\n                                    <button\r\n                                        key={index}\r\n                                        onClick={() => typeof pageNum === 'number' && handlePageChange(pageNum)}\r\n                                        disabled={pageNum === '...'}\r\n                                        className={`pagination-btn ${pageNum === currentPage ? 'active' : ''} ${pageNum === '...' ? 'dots' : ''}`}\r\n                                    >\r\n                                        {pageNum === '...' ? <MoreHorizontal size={16} /> : pageNum}\r\n                                    </button>\r\n                                ))}\r\n\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage + 1)}\r\n                                    disabled={currentPage >= totalPages}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    Next <ChevronRight size={18} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProblemListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}