{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\OneDrive\\\\Pictures\\\\Documents\\\\Desktop\\\\CodeCrux\\\\frontend\\\\src\\\\pages\\\\Contests\\\\Contests.jsx\",\n  _s = $RefreshSig$();\n// frontend/src/pages/Contests/ContestsPage.jsx\n\nimport React, { useEffect, useState, useMemo } from 'react';\nimport { fetchContestsAPI, addContestToFavoritesAPI, removeContestFromFavoritesAPI, fetchFavoriteContestsAPI } from '../../api/apiService';\nimport ContestCard from '../../components/ContestCard/ContestCard';\nimport { CalendarDays, AlertTriangle, Loader2, Search } from 'lucide-react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useAuth } from '../../context/AuthContext';\nimport './Contests.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContestsPage = () => {\n  _s();\n  const [contests, setContests] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [favoriteContestIdentifiers, setFavoriteContestIdentifiers] = useState(new Set());\n  const [searchTerm, setSearchTerm] = useState('');\n  const {\n    userInfo\n  } = useAuth();\n  useEffect(() => {\n    const loadContests = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n        const response = await fetchContestsAPI({\n          limit: 100\n        });\n        setContests(response.data.contests || []);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        console.error('Error fetching contests:', err);\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to fetch contests. Please try again.');\n        setContests([]);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadContests();\n  }, []);\n  useEffect(() => {\n    const loadFavoriteContests = async () => {\n      if (!userInfo) return;\n      try {\n        const response = await fetchFavoriteContestsAPI();\n        // FIX: The backend uses 'identifier' to store favorites\n        const identifiers = new Set(response.data.map(fav => fav.identifier));\n        setFavoriteContestIdentifiers(identifiers);\n      } catch (err) {\n        console.error(\"Failed to load favorite contests:\", err);\n      }\n    };\n    if (userInfo) {\n      loadFavoriteContests();\n    } else {\n      setFavoriteContestIdentifiers(new Set());\n    }\n  }, [userInfo]);\n  const handleFavoriteToggle = async contest => {\n    if (!userInfo) {\n      alert(\"Please log in to manage favorites.\");\n      return;\n    }\n\n    // Use clistId if it exists, otherwise use the MongoDB _id\n    const identifier = contest.clistId || contest._id;\n    if (!identifier) {\n      console.error(\"Contest has no identifiable ID for favoriting:\", contest);\n      alert(\"Cannot favorite this contest: missing unique identifier.\");\n      return;\n    }\n    try {\n      if (favoriteContestIdentifiers.has(identifier)) {\n        // The DELETE request correctly uses the identifier in the URL\n        await removeContestFromFavoritesAPI(identifier);\n        setFavoriteContestIdentifiers(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(identifier);\n          return newSet;\n        });\n      } else {\n        // FIX: Construct the exact payload the backend controller expects\n        await addContestToFavoritesAPI({\n          identifier: identifier,\n          title: contest.title,\n          platform: contest.platform,\n          startTime: contest.startTime,\n          url: contest.url,\n          apiSource: contest.apiSource || 'clist.by' // Ensure apiSource is sent\n        });\n        setFavoriteContestIdentifiers(prev => new Set(prev).add(identifier));\n      }\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      console.error(\"Error toggling favorite contest:\", err);\n      // The alert now shows the actual error message from the backend if available\n      alert(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Something went wrong!\");\n    }\n  };\n  const filteredContests = useMemo(() => {\n    if (!searchTerm) return contests;\n    return contests.filter(c => c.title.toLowerCase().includes(searchTerm.toLowerCase()) || c.platform.toLowerCase().includes(searchTerm.toLowerCase()));\n  }, [contests, searchTerm]);\n  const pageVariants = {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    in: {\n      opacity: 1,\n      y: 0\n    },\n    out: {\n      opacity: 0,\n      y: -20\n    }\n  };\n  const listVariants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.08\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    className: \"contests-page-main container\",\n    variants: pageVariants,\n    initial: \"initial\",\n    animate: \"in\",\n    exit: \"out\",\n    transition: {\n      duration: 0.4\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"page-title\",\n        children: [/*#__PURE__*/_jsxDEV(CalendarDays, {\n          size: 32\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 44\n        }, this), \" Upcoming Contests\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-container\",\n        children: [/*#__PURE__*/_jsxDEV(Search, {\n          className: \"search-icon\",\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Filter by name or platform...\",\n          className: \"search-input\",\n          value: searchTerm,\n          onChange: e => setSearchTerm(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-state\",\n      children: [/*#__PURE__*/_jsxDEV(Loader2, {\n        size: 48,\n        className: \"spinner-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 56\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading contests...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 102\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 25\n    }, this), error && !loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n        size: 32\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 66\n      }, this), \" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 35\n    }, this), !loading && !error && filteredContests.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"no-contests\",\n      children: searchTerm ? `No contests found matching \"${searchTerm}\".` : \"No upcoming contests found. Check back soon!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this), !loading && !error && filteredContests.length > 0 && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"contests-list-layout\",\n      variants: listVariants,\n      initial: \"hidden\",\n      animate: \"visible\",\n      children: filteredContests.map(contest => /*#__PURE__*/_jsxDEV(ContestCard, {\n        contest: contest,\n        onFavoriteToggle: userInfo ? handleFavoriteToggle : null,\n        isFavorite: favoriteContestIdentifiers.has(contest.clistId || contest._id)\n      }, contest.clistId || contest._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(ContestsPage, \"8GlFxDx1Ba0h/YxSVi29jHxXmYU=\", false, function () {\n  return [useAuth];\n});\n_c = ContestsPage;\nexport default ContestsPage;\nvar _c;\n$RefreshReg$(_c, \"ContestsPage\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","fetchContestsAPI","addContestToFavoritesAPI","removeContestFromFavoritesAPI","fetchFavoriteContestsAPI","ContestCard","CalendarDays","AlertTriangle","Loader2","Search","motion","AnimatePresence","useAuth","jsxDEV","_jsxDEV","ContestsPage","_s","contests","setContests","loading","setLoading","error","setError","favoriteContestIdentifiers","setFavoriteContestIdentifiers","Set","searchTerm","setSearchTerm","userInfo","loadContests","response","limit","data","err","_err$response","_err$response$data","console","message","loadFavoriteContests","identifiers","map","fav","identifier","handleFavoriteToggle","contest","alert","clistId","_id","has","prev","newSet","delete","title","platform","startTime","url","apiSource","add","_err$response2","_err$response2$data","filteredContests","filter","c","toLowerCase","includes","pageVariants","initial","opacity","y","in","out","listVariants","hidden","visible","transition","staggerChildren","div","className","variants","animate","exit","duration","children","size","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","length","onFavoriteToggle","isFavorite","_c","$RefreshReg$"],"sources":["C:/Users/HP/OneDrive/Pictures/Documents/Desktop/CodeCrux/frontend/src/pages/Contests/Contests.jsx"],"sourcesContent":["// frontend/src/pages/Contests/ContestsPage.jsx\r\n\r\nimport React, { useEffect, useState, useMemo } from 'react';\r\nimport { fetchContestsAPI, addContestToFavoritesAPI, removeContestFromFavoritesAPI, fetchFavoriteContestsAPI } from '../../api/apiService';\r\nimport ContestCard from '../../components/ContestCard/ContestCard';\r\nimport { CalendarDays, AlertTriangle, Loader2, Search } from 'lucide-react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport './Contests.css';\r\n\r\nconst ContestsPage = () => {\r\n    const [contests, setContests] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [favoriteContestIdentifiers, setFavoriteContestIdentifiers] = useState(new Set());\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const { userInfo } = useAuth();\r\n\r\n    useEffect(() => {\r\n        const loadContests = async () => {\r\n            try {\r\n                setLoading(true);\r\n                setError(null);\r\n                const response = await fetchContestsAPI({ limit: 100 });\r\n                setContests(response.data.contests || []);\r\n            } catch (err) {\r\n                console.error('Error fetching contests:', err);\r\n                setError(err.response?.data?.message || 'Failed to fetch contests. Please try again.');\r\n                setContests([]);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n        loadContests();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const loadFavoriteContests = async () => {\r\n            if (!userInfo) return;\r\n            try {\r\n                const response = await fetchFavoriteContestsAPI();\r\n                // FIX: The backend uses 'identifier' to store favorites\r\n                const identifiers = new Set(response.data.map(fav => fav.identifier));\r\n                setFavoriteContestIdentifiers(identifiers);\r\n            } catch (err) {\r\n                console.error(\"Failed to load favorite contests:\", err);\r\n            }\r\n        };\r\n\r\n        if (userInfo) {\r\n            loadFavoriteContests();\r\n        } else {\r\n            setFavoriteContestIdentifiers(new Set());\r\n        }\r\n    }, [userInfo]);\r\n\r\n    const handleFavoriteToggle = async (contest) => {\r\n        if (!userInfo) {\r\n            alert(\"Please log in to manage favorites.\");\r\n            return;\r\n        }\r\n        \r\n        // Use clistId if it exists, otherwise use the MongoDB _id\r\n        const identifier = contest.clistId || contest._id;\r\n        \r\n        if (!identifier) {\r\n            console.error(\"Contest has no identifiable ID for favoriting:\", contest);\r\n            alert(\"Cannot favorite this contest: missing unique identifier.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            if (favoriteContestIdentifiers.has(identifier)) {\r\n                // The DELETE request correctly uses the identifier in the URL\r\n                await removeContestFromFavoritesAPI(identifier);\r\n                setFavoriteContestIdentifiers(prev => {\r\n                    const newSet = new Set(prev);\r\n                    newSet.delete(identifier);\r\n                    return newSet;\r\n                });\r\n            } else {\r\n                // FIX: Construct the exact payload the backend controller expects\r\n                await addContestToFavoritesAPI({\r\n                    identifier: identifier,\r\n                    title: contest.title,\r\n                    platform: contest.platform,\r\n                    startTime: contest.startTime,\r\n                    url: contest.url,\r\n                    apiSource: contest.apiSource || 'clist.by' // Ensure apiSource is sent\r\n                });\r\n                setFavoriteContestIdentifiers(prev => new Set(prev).add(identifier));\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error toggling favorite contest:\", err);\r\n            // The alert now shows the actual error message from the backend if available\r\n            alert(err.response?.data?.message || \"Something went wrong!\");\r\n        }\r\n    };\r\n\r\n    const filteredContests = useMemo(() => {\r\n        if (!searchTerm) return contests;\r\n        return contests.filter(c =>\r\n            c.title.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            c.platform.toLowerCase().includes(searchTerm.toLowerCase())\r\n        );\r\n    }, [contests, searchTerm]);\r\n\r\n    const pageVariants = {\r\n        initial: { opacity: 0, y: 20 },\r\n        in: { opacity: 1, y: 0 },\r\n        out: { opacity: 0, y: -20 },\r\n    };\r\n\r\n    const listVariants = {\r\n        hidden: { opacity: 0 },\r\n        visible: { opacity: 1, transition: { staggerChildren: 0.08 } },\r\n    };\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"contests-page-main container\"\r\n            variants={pageVariants}\r\n            initial=\"initial\"\r\n            animate=\"in\"\r\n            exit=\"out\"\r\n            transition={{ duration: 0.4 }}\r\n        >\r\n            <div className=\"page-header\">\r\n                <h1 className=\"page-title\"><CalendarDays size={32} /> Upcoming Contests</h1>\r\n                <div className=\"search-container\">\r\n                    <Search className=\"search-icon\" size={20} />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"Filter by name or platform...\"\r\n                        className=\"search-input\"\r\n                        value={searchTerm}\r\n                        onChange={(e) => setSearchTerm(e.target.value)}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n            {loading && <div className=\"loading-state\"><Loader2 size={48} className=\"spinner-icon\" /><p>Loading contests...</p></div>}\r\n            {error && !loading && <div className=\"error-message\"><AlertTriangle size={32} /> {error}</div>}\r\n            {!loading && !error && filteredContests.length === 0 && (\r\n                <div className=\"no-contests\">\r\n                    {searchTerm ? `No contests found matching \"${searchTerm}\".` : \"No upcoming contests found. Check back soon!\"}\r\n                </div>\r\n            )}\r\n            {!loading && !error && filteredContests.length > 0 && (\r\n                <motion.div className=\"contests-list-layout\" variants={listVariants} initial=\"hidden\" animate=\"visible\">\r\n                    {filteredContests.map((contest) => (\r\n                        <ContestCard\r\n                            key={contest.clistId || contest._id}\r\n                            contest={contest}\r\n                            onFavoriteToggle={userInfo ? handleFavoriteToggle : null}\r\n                            isFavorite={favoriteContestIdentifiers.has(contest.clistId || contest._id)}\r\n                        />\r\n                    ))}\r\n                </motion.div>\r\n            )}\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nexport default ContestsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}