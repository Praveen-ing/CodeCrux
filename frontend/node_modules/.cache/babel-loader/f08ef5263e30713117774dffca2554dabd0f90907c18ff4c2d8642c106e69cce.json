{"ast":null,"code":"// frontend/src/pages/ProblemList/ProblemList.jsx\nimport React,{useState,useEffect,useCallback}from'react';import{useSearchParams,useNavigate,useLocation}from'react-router-dom';import{fetchProblemsAPI,markProblemSolvedAPI,addProblemToFavoritesAPI,removeProblemFromFavoritesAPI}from'../../api/apiService';import{useAuth}from'../../context/AuthContext';import'./ProblemList.css';import{Filter,Search,ListChecks,CheckCircle,ExternalLink,ChevronDown,ChevronUp,Star,StarOff,Loader2,Info,AlertTriangle,ChevronLeft,ChevronRight,MoreHorizontal}from'lucide-react';import{jsxs as _jsxs,jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const PROBLEMS_PER_PAGE=20;// Fixed 20 problems per page\nconst ProblemListPage=()=>{var _searchParams$get;const[problems,setProblems]=useState([]);const[isLoading,setIsLoading]=useState(true);const[error,setError]=useState(null);const[searchParams,setSearchParams]=useSearchParams();const navigate=useNavigate();const location=useLocation();const{userInfo}=useAuth();// Filter states\nconst[searchTermInput,setSearchTermInput]=useState(searchParams.get('search')||'');const[difficultyInput,setDifficultyInput]=useState(searchParams.get('difficulty')||'');const[platformInput,setPlatformInput]=useState(searchParams.get('platform')||'');const[tagsInput,setTagsInput]=useState(((_searchParams$get=searchParams.get('tags'))===null||_searchParams$get===void 0?void 0:_searchParams$get.split(',').filter(Boolean))||[]);const initialStatus=userInfo&&!searchParams.get('status')?'':searchParams.get('status')||'';// Changed default to show all\nconst[statusInput,setStatusInput]=useState(initialStatus);const[showFilters,setShowFilters]=useState(true);// Pagination states\nconst[totalProblems,setTotalProblems]=useState(0);const[currentPage,setCurrentPage]=useState(parseInt(searchParams.get('page')||'1'));const[totalPages,setTotalPages]=useState(0);const availableDifficulties=['All','Easy','Medium','Hard','800','900','1000','1100','1200','1300','1400','1500','1600','1700','1800','1900','2000','2100','2200','2300','2400','2500','2600+'];const availablePlatforms=['All','Codeforces','LeetCode','AtCoder','GeeksforGeeks','HackerRank','CodeChef','HackerEarth','SPOJ','TopCoder'];const availableTags=['arrays','strings','dp','graphs','trees','math','greedy','sorting','searching','two pointers','implementation','constructive algorithms','binary search','bit manipulation','number theory','geometry','combinatorics','data structures','brute force','dfs and similar'];const fetchProblems=useCallback(async filtersForAPI=>{setIsLoading(true);setError(null);console.log(\"Fetching problems with filters:\",filtersForAPI);try{const response=await fetchProblemsAPI(filtersForAPI);console.log(\"API Response:\",response.data);setProblems(response.data.data||[]);setTotalProblems(response.data.totalProblems||0);setCurrentPage(response.data.currentPage||1);setTotalPages(response.data.totalPages||0);}catch(err){var _err$response,_err$response$data;console.error(\"Error fetching problems:\",err);setError(((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Failed to fetch problems. Please try again.');setProblems([]);setTotalProblems(0);setTotalPages(0);}finally{setIsLoading(false);}},[]);useEffect(()=>{var _searchParams$get2;console.log(\"searchParams changed:\",searchParams.toString());const currentPageFromParams=parseInt(searchParams.get('page')||'1');const currentSearchTerm=searchParams.get('search')||'';const currentDifficulty=searchParams.get('difficulty')||'';const currentPlatform=searchParams.get('platform')||'';const currentTags=((_searchParams$get2=searchParams.get('tags'))===null||_searchParams$get2===void 0?void 0:_searchParams$get2.split(',').filter(Boolean))||[];const currentStatus=searchParams.get('status')||'';// Update local input states\nsetSearchTermInput(currentSearchTerm);setDifficultyInput(currentDifficulty);setPlatformInput(currentPlatform);setTagsInput(currentTags);setStatusInput(currentStatus);setCurrentPage(currentPageFromParams);const paramsForAPI={page:currentPageFromParams,limit:PROBLEMS_PER_PAGE};if(currentSearchTerm)paramsForAPI.search=currentSearchTerm;if(currentDifficulty&&currentDifficulty!=='All')paramsForAPI.difficulty=currentDifficulty;if(currentPlatform&&currentPlatform!=='All')paramsForAPI.platform=currentPlatform;if(currentTags.length>0)paramsForAPI.tags=currentTags.join(',');if(currentStatus)paramsForAPI.status=currentStatus;fetchProblems(paramsForAPI);},[searchParams,fetchProblems,userInfo]);const handleApplyFilters=()=>{const newParams={page:'1'};// Reset to page 1 when filters change\nif(searchTermInput)newParams.search=searchTermInput;if(difficultyInput&&difficultyInput!=='All')newParams.difficulty=difficultyInput;if(platformInput&&platformInput!=='All')newParams.platform=platformInput;if(tagsInput.length>0)newParams.tags=tagsInput.join(',');if(statusInput)newParams.status=statusInput;setSearchParams(newParams,{replace:true});};const handlePageChange=newPage=>{if(newPage>=1&&newPage<=totalPages){const newParams=new URLSearchParams(searchParams);newParams.set('page',String(newPage));setSearchParams(newParams);// Scroll to top when page changes\nwindow.scrollTo({top:0,behavior:'smooth'});}};const handleTagInputChange=tag=>{setTagsInput(prevTags=>prevTags.includes(tag)?prevTags.filter(t=>t!==tag):[...prevTags,tag]);};const handleMarkAsSolved=async(problemId,problemPlatform)=>{if(!userInfo){navigate('/login',{state:{from:location}});return;}try{const problemToMark=problems.find(p=>p.problemId===problemId&&p.platform===problemPlatform);await markProblemSolvedAPI({problemId,platform:problemPlatform,title:problemToMark===null||problemToMark===void 0?void 0:problemToMark.title});// Optimistically update UI\nsetProblems(prev=>prev.map(p=>p.problemId===problemId&&p.platform===problemPlatform?{...p,isSolvedByCurrentUser:true}:p));// If status is 'unsolved', refetch to remove it from list\nif(statusInput==='unsolved'){const currentFilters=Object.fromEntries(searchParams.entries());fetchProblems({...currentFilters,page:currentPage,limit:PROBLEMS_PER_PAGE});}}catch(err){var _err$response2,_err$response2$data;console.error(\"Error marking problem as solved:\",err);alert(((_err$response2=err.response)===null||_err$response2===void 0?void 0:(_err$response2$data=_err$response2.data)===null||_err$response2$data===void 0?void 0:_err$response2$data.message)||\"Could not mark as solved.\");}};const handleToggleFavorite=async problem=>{if(!userInfo){navigate('/login',{state:{from:location}});return;}const problemDetails={problemId:problem.problemId,platform:problem.platform,title:problem.title,url:problem.url,difficulty:problem.difficulty};try{if(problem.isFavoritedByCurrentUser){await removeProblemFromFavoritesAPI(problem.platform,problem.problemId);setProblems(prev=>prev.map(p=>p.problemId===problem.problemId&&p.platform===problem.platform?{...p,isFavoritedByCurrentUser:false}:p));}else{await addProblemToFavoritesAPI(problemDetails);setProblems(prev=>prev.map(p=>p.problemId===problem.problemId&&p.platform===problem.platform?{...p,isFavoritedByCurrentUser:true}:p));}}catch(err){var _err$response3,_err$response3$data;console.error(\"Error toggling favorite:\",err);alert(((_err$response3=err.response)===null||_err$response3===void 0?void 0:(_err$response3$data=_err$response3.data)===null||_err$response3$data===void 0?void 0:_err$response3$data.message)||\"Could not update favorite status.\");}};// Pagination helper function\nconst getPageNumbers=()=>{const delta=2;// Number of pages to show on each side of current page\nconst range=[];const rangeWithDots=[];for(let i=Math.max(2,currentPage-delta);i<=Math.min(totalPages-1,currentPage+delta);i++){range.push(i);}if(currentPage-delta>2){rangeWithDots.push(1,'...');}else{rangeWithDots.push(1);}rangeWithDots.push(...range);if(currentPage+delta<totalPages-1){rangeWithDots.push('...',totalPages);}else if(totalPages>1){rangeWithDots.push(totalPages);}return rangeWithDots;};const clearAllFilters=()=>{setSearchTermInput('');setDifficultyInput('');setPlatformInput('');setTagsInput([]);setStatusInput('');setSearchParams({page:'1'},{replace:true});};const getStatusText=()=>{if(statusInput==='solved')return'Solved Problems';if(statusInput==='unsolved')return'Unsolved Problems';return'All Problems';};const getDifficultyColor=difficulty=>{const difficultyLower=difficulty===null||difficulty===void 0?void 0:difficulty.toLowerCase();if(difficultyLower==='easy')return'difficulty-easy';if(difficultyLower==='medium')return'difficulty-medium';if(difficultyLower==='hard')return'difficulty-hard';// Handle Codeforces rating-based difficulties\nconst rating=parseInt(difficulty);if(!isNaN(rating)){if(rating<=1200)return'difficulty-easy';if(rating<=1600)return'difficulty-medium';return'difficulty-hard';}return'difficulty-unknown';};console.log(\"Rendering ProblemList:\",{isLoading,error,problemsCount:problems.length,totalProblems,currentPage,totalPages});return/*#__PURE__*/_jsxs(\"div\",{className:\"problem-list-page\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"problem-list-header\",children:[/*#__PURE__*/_jsxs(\"h1\",{children:[getStatusText(),totalProblems>0&&/*#__PURE__*/_jsxs(\"span\",{className:\"problem-count-info\",children:[\"- Page \",currentPage,\" of \",totalPages,\" (\",totalProblems,\" total problems)\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-btn\",onClick:clearAllFilters,children:\"Clear All Filters\"}),/*#__PURE__*/_jsxs(\"button\",{className:\"toggle-filters-btn\",onClick:()=>setShowFilters(!showFilters),children:[/*#__PURE__*/_jsx(Filter,{size:20}),showFilters?'Hide':'Show',\" Filters\",showFilters?/*#__PURE__*/_jsx(ChevronUp,{size:18}):/*#__PURE__*/_jsx(ChevronDown,{size:18})]})]})]}),showFilters&&/*#__PURE__*/_jsxs(\"div\",{className:\"filters-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group search-filter\",children:[/*#__PURE__*/_jsx(Search,{size:18}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search problems by name or ID...\",value:searchTermInput,onChange:e=>setSearchTermInput(e.target.value),onKeyPress:e=>e.key==='Enter'&&handleApplyFilters()})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"difficulty\",children:\"Difficulty:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"difficulty\",value:difficultyInput,onChange:e=>setDifficultyInput(e.target.value),children:availableDifficulties.map(d=>/*#__PURE__*/_jsx(\"option\",{value:d==='All'?'':d,children:d},d))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"platform\",children:\"Platform:\"}),/*#__PURE__*/_jsx(\"select\",{id:\"platform\",value:platformInput,onChange:e=>setPlatformInput(e.target.value),children:availablePlatforms.map(p=>/*#__PURE__*/_jsx(\"option\",{value:p==='All'?'':p,children:p},p))})]}),userInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"status\",children:\"Status:\"}),/*#__PURE__*/_jsxs(\"select\",{id:\"status\",value:statusInput,onChange:e=>setStatusInput(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"solved\",children:\"Solved\"}),/*#__PURE__*/_jsx(\"option\",{value:\"unsolved\",children:\"Unsolved\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-group tags-filter\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Tags:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"tags-options\",children:availableTags.map(tag=>/*#__PURE__*/_jsx(\"button\",{className:`tag-btn ${tagsInput.includes(tag)?'active':''}`,onClick:()=>handleTagInputChange(tag),children:tag},tag))})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"filter-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"apply-filters-btn\",onClick:handleApplyFilters,children:\"Apply Filters\"}),/*#__PURE__*/_jsx(\"button\",{className:\"clear-filters-btn secondary\",onClick:clearAllFilters,children:\"Clear All\"})]})]}),isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"loading-problems\",children:[/*#__PURE__*/_jsx(Loader2,{size:32,className:\"spinner-icon\"}),\"Loading problems...\"]}),error&&/*#__PURE__*/_jsxs(\"div\",{className:\"error-problems\",children:[/*#__PURE__*/_jsx(AlertTriangle,{size:20}),error]}),!isLoading&&!error&&problems.length===0&&/*#__PURE__*/_jsxs(\"div\",{className:\"no-problems-found\",children:[/*#__PURE__*/_jsx(Info,{size:24}),/*#__PURE__*/_jsx(\"h3\",{children:\"No problems found\"}),totalProblems===0?/*#__PURE__*/_jsx(\"p\",{children:\"No problems match your current filters.\"}):/*#__PURE__*/_jsx(\"p\",{children:\"Try adjusting your filters or go to a different page.\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearAllFilters,className:\"clear-filters-btn\",children:\"Clear All Filters\"})]}),!isLoading&&!error&&problems.length>0&&/*#__PURE__*/_jsxs(_Fragment,{children:[totalPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-controls top\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-info\",children:[\"Showing \",(currentPage-1)*PROBLEMS_PER_PAGE+1,\" - \",Math.min(currentPage*PROBLEMS_PER_PAGE,totalProblems),\" of \",totalProblems,\" problems\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handlePageChange(currentPage-1),disabled:currentPage<=1,className:\"pagination-btn\",children:[/*#__PURE__*/_jsx(ChevronLeft,{size:18}),\" Previous\"]}),getPageNumbers().map((pageNum,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>typeof pageNum==='number'&&handlePageChange(pageNum),disabled:pageNum==='...',className:`pagination-btn ${pageNum===currentPage?'active':''} ${pageNum==='...'?'dots':''}`,children:pageNum==='...'?/*#__PURE__*/_jsx(MoreHorizontal,{size:16}):pageNum},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handlePageChange(currentPage+1),disabled:currentPage>=totalPages,className:\"pagination-btn\",children:[\"Next \",/*#__PURE__*/_jsx(ChevronRight,{size:18})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"problems-list-view\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-list-row header-row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-status-col\",children:\"Status\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-title-col\",children:\"Title\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-platform-col\",children:\"Platform\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-difficulty-col\",children:\"Difficulty\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-tags-col\",children:\"Tags\"}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-actions-col\",children:\"Actions\"})]}),problems.map(problem=>{var _problem$platform,_problem$tags,_problem$tags2;return/*#__PURE__*/_jsxs(\"div\",{className:`problem-list-row ${problem.isSolvedByCurrentUser?'solved':''}`,children:[/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-status-col\",children:problem.isSolvedByCurrentUser?/*#__PURE__*/_jsx(CheckCircle,{size:20,className:\"solved-icon\",title:\"Solved\"}):/*#__PURE__*/_jsx(\"div\",{className:\"unsolved-icon\",title:\"Unsolved\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-list-title-col\",children:[/*#__PURE__*/_jsxs(\"a\",{href:problem.url,target:\"_blank\",rel:\"noopener noreferrer\",className:\"problem-title-link\",children:[problem.title,/*#__PURE__*/_jsx(ExternalLink,{size:14,className:\"external-link-icon\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-id\",children:problem.problemId})]}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-platform-col\",children:/*#__PURE__*/_jsx(\"span\",{className:`platform-badge platform-${(_problem$platform=problem.platform)===null||_problem$platform===void 0?void 0:_problem$platform.toLowerCase()}`,children:problem.platform})}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-difficulty-col\",children:/*#__PURE__*/_jsx(\"span\",{className:`difficulty-badge ${getDifficultyColor(problem.difficulty)}`,children:problem.difficulty})}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-tags-col\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"tags-container\",children:[(_problem$tags=problem.tags)===null||_problem$tags===void 0?void 0:_problem$tags.slice(0,3).map((tag,index)=>/*#__PURE__*/_jsx(\"span\",{className:\"tag-badge\",children:tag},index)),((_problem$tags2=problem.tags)===null||_problem$tags2===void 0?void 0:_problem$tags2.length)>3&&/*#__PURE__*/_jsxs(\"span\",{className:\"tag-badge more-tags\",children:[\"+\",problem.tags.length-3,\" more\"]})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"problem-list-actions-col\",children:userInfo&&/*#__PURE__*/_jsxs(\"div\",{className:\"problem-actions\",children:[!problem.isSolvedByCurrentUser&&/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleMarkAsSolved(problem.problemId,problem.platform),className:\"action-btn solve-btn\",title:\"Mark as solved\",children:/*#__PURE__*/_jsx(ListChecks,{size:16})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleToggleFavorite(problem),className:`action-btn favorite-btn ${problem.isFavoritedByCurrentUser?'favorited':''}`,title:problem.isFavoritedByCurrentUser?\"Remove from favorites\":\"Add to favorites\",children:problem.isFavoritedByCurrentUser?/*#__PURE__*/_jsx(Star,{size:16,className:\"star-filled\"}):/*#__PURE__*/_jsx(StarOff,{size:16})})]})})]},`${problem.platform}-${problem.problemId}`);})]}),totalPages>1&&/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-controls bottom\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-info\",children:[\"Showing \",(currentPage-1)*PROBLEMS_PER_PAGE+1,\" - \",Math.min(currentPage*PROBLEMS_PER_PAGE,totalProblems),\" of \",totalProblems,\" problems\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"pagination-buttons\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handlePageChange(currentPage-1),disabled:currentPage<=1,className:\"pagination-btn\",children:[/*#__PURE__*/_jsx(ChevronLeft,{size:18}),\" Previous\"]}),getPageNumbers().map((pageNum,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>typeof pageNum==='number'&&handlePageChange(pageNum),disabled:pageNum==='...',className:`pagination-btn ${pageNum===currentPage?'active':''} ${pageNum==='...'?'dots':''}`,children:pageNum==='...'?/*#__PURE__*/_jsx(MoreHorizontal,{size:16}):pageNum},index)),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>handlePageChange(currentPage+1),disabled:currentPage>=totalPages,className:\"pagination-btn\",children:[\"Next \",/*#__PURE__*/_jsx(ChevronRight,{size:18})]})]})]})]})]});};export default ProblemListPage;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useSearchParams","useNavigate","useLocation","fetchProblemsAPI","markProblemSolvedAPI","addProblemToFavoritesAPI","removeProblemFromFavoritesAPI","useAuth","Filter","Search","ListChecks","CheckCircle","ExternalLink","ChevronDown","ChevronUp","Star","StarOff","Loader2","Info","AlertTriangle","ChevronLeft","ChevronRight","MoreHorizontal","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","PROBLEMS_PER_PAGE","ProblemListPage","_searchParams$get","problems","setProblems","isLoading","setIsLoading","error","setError","searchParams","setSearchParams","navigate","location","userInfo","searchTermInput","setSearchTermInput","get","difficultyInput","setDifficultyInput","platformInput","setPlatformInput","tagsInput","setTagsInput","split","filter","Boolean","initialStatus","statusInput","setStatusInput","showFilters","setShowFilters","totalProblems","setTotalProblems","currentPage","setCurrentPage","parseInt","totalPages","setTotalPages","availableDifficulties","availablePlatforms","availableTags","fetchProblems","filtersForAPI","console","log","response","data","err","_err$response","_err$response$data","message","_searchParams$get2","toString","currentPageFromParams","currentSearchTerm","currentDifficulty","currentPlatform","currentTags","currentStatus","paramsForAPI","page","limit","search","difficulty","platform","length","tags","join","status","handleApplyFilters","newParams","replace","handlePageChange","newPage","URLSearchParams","set","String","window","scrollTo","top","behavior","handleTagInputChange","tag","prevTags","includes","t","handleMarkAsSolved","problemId","problemPlatform","state","from","problemToMark","find","p","title","prev","map","isSolvedByCurrentUser","currentFilters","Object","fromEntries","entries","_err$response2","_err$response2$data","alert","handleToggleFavorite","problem","problemDetails","url","isFavoritedByCurrentUser","_err$response3","_err$response3$data","getPageNumbers","delta","range","rangeWithDots","i","Math","max","min","push","clearAllFilters","getStatusText","getDifficultyColor","difficultyLower","toLowerCase","rating","isNaN","problemsCount","className","children","onClick","size","type","placeholder","value","onChange","e","target","onKeyPress","key","htmlFor","id","d","disabled","pageNum","index","_problem$platform","_problem$tags","_problem$tags2","href","rel","slice"],"sources":["C:/Users/HP/OneDrive/Pictures/Documents/Desktop/CodeCrux/frontend/src/pages/ProblemList/ProblemList.jsx"],"sourcesContent":["// frontend/src/pages/ProblemList/ProblemList.jsx\r\nimport React, { useState, useEffect, useCallback } from 'react';\r\nimport { useSearchParams, useNavigate, useLocation } from 'react-router-dom';\r\nimport {\r\n    fetchProblemsAPI,\r\n    markProblemSolvedAPI,\r\n    addProblemToFavoritesAPI,\r\n    removeProblemFromFavoritesAPI\r\n} from '../../api/apiService';\r\nimport { useAuth } from '../../context/AuthContext';\r\nimport './ProblemList.css';\r\nimport {\r\n    Filter, Search, ListChecks, CheckCircle, ExternalLink,\r\n    ChevronDown, ChevronUp, Star, StarOff, Loader2, Info, AlertTriangle,\r\n    ChevronLeft, ChevronRight, MoreHorizontal\r\n} from 'lucide-react';\r\n\r\nconst PROBLEMS_PER_PAGE = 20; // Fixed 20 problems per page\r\n\r\nconst ProblemListPage = () => {\r\n    const [problems, setProblems] = useState([]);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n    const { userInfo } = useAuth();\r\n\r\n    // Filter states\r\n    const [searchTermInput, setSearchTermInput] = useState(searchParams.get('search') || '');\r\n    const [difficultyInput, setDifficultyInput] = useState(searchParams.get('difficulty') || '');\r\n    const [platformInput, setPlatformInput] = useState(searchParams.get('platform') || '');\r\n    const [tagsInput, setTagsInput] = useState(searchParams.get('tags')?.split(',').filter(Boolean) || []);\r\n    const initialStatus = userInfo && !searchParams.get('status') ? '' : (searchParams.get('status') || ''); // Changed default to show all\r\n    const [statusInput, setStatusInput] = useState(initialStatus);\r\n    const [showFilters, setShowFilters] = useState(true);\r\n\r\n    // Pagination states\r\n    const [totalProblems, setTotalProblems] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(parseInt(searchParams.get('page') || '1'));\r\n    const [totalPages, setTotalPages] = useState(0);\r\n\r\n    const availableDifficulties = ['All', 'Easy', 'Medium', 'Hard', '800', '900', '1000', '1100', '1200', '1300', '1400', '1500', '1600', '1700', '1800', '1900', '2000', '2100', '2200', '2300', '2400', '2500', '2600+'];\r\n    const availablePlatforms = ['All', 'Codeforces', 'LeetCode', 'AtCoder', 'GeeksforGeeks', 'HackerRank', 'CodeChef', 'HackerEarth', 'SPOJ', 'TopCoder'];\r\n    const availableTags = ['arrays', 'strings', 'dp', 'graphs', 'trees', 'math', 'greedy', 'sorting', 'searching', 'two pointers', 'implementation', 'constructive algorithms', 'binary search', 'bit manipulation', 'number theory', 'geometry', 'combinatorics', 'data structures', 'brute force', 'dfs and similar'];\r\n\r\n    const fetchProblems = useCallback(async (filtersForAPI) => {\r\n        setIsLoading(true);\r\n        setError(null);\r\n        console.log(\"Fetching problems with filters:\", filtersForAPI);\r\n        try {\r\n            const response = await fetchProblemsAPI(filtersForAPI);\r\n            console.log(\"API Response:\", response.data);\r\n            setProblems(response.data.data || []);\r\n            setTotalProblems(response.data.totalProblems || 0);\r\n            setCurrentPage(response.data.currentPage || 1);\r\n            setTotalPages(response.data.totalPages || 0);\r\n        } catch (err) {\r\n            console.error(\"Error fetching problems:\", err);\r\n            setError(err.response?.data?.message || 'Failed to fetch problems. Please try again.');\r\n            setProblems([]);\r\n            setTotalProblems(0);\r\n            setTotalPages(0);\r\n        } finally {\r\n            setIsLoading(false);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        console.log(\"searchParams changed:\", searchParams.toString());\r\n        const currentPageFromParams = parseInt(searchParams.get('page') || '1');\r\n        const currentSearchTerm = searchParams.get('search') || '';\r\n        const currentDifficulty = searchParams.get('difficulty') || '';\r\n        const currentPlatform = searchParams.get('platform') || '';\r\n        const currentTags = searchParams.get('tags')?.split(',').filter(Boolean) || [];\r\n        const currentStatus = searchParams.get('status') || '';\r\n\r\n        // Update local input states\r\n        setSearchTermInput(currentSearchTerm);\r\n        setDifficultyInput(currentDifficulty);\r\n        setPlatformInput(currentPlatform);\r\n        setTagsInput(currentTags);\r\n        setStatusInput(currentStatus);\r\n        setCurrentPage(currentPageFromParams);\r\n\r\n        const paramsForAPI = { page: currentPageFromParams, limit: PROBLEMS_PER_PAGE };\r\n        if (currentSearchTerm) paramsForAPI.search = currentSearchTerm;\r\n        if (currentDifficulty && currentDifficulty !== 'All') paramsForAPI.difficulty = currentDifficulty;\r\n        if (currentPlatform && currentPlatform !== 'All') paramsForAPI.platform = currentPlatform;\r\n        if (currentTags.length > 0) paramsForAPI.tags = currentTags.join(',');\r\n        if (currentStatus) paramsForAPI.status = currentStatus;\r\n\r\n        fetchProblems(paramsForAPI);\r\n    }, [searchParams, fetchProblems, userInfo]);\r\n\r\n    const handleApplyFilters = () => {\r\n        const newParams = { page: '1' }; // Reset to page 1 when filters change\r\n        if (searchTermInput) newParams.search = searchTermInput;\r\n        if (difficultyInput && difficultyInput !== 'All') newParams.difficulty = difficultyInput;\r\n        if (platformInput && platformInput !== 'All') newParams.platform = platformInput;\r\n        if (tagsInput.length > 0) newParams.tags = tagsInput.join(',');\r\n        if (statusInput) newParams.status = statusInput;\r\n        setSearchParams(newParams, { replace: true });\r\n    };\r\n\r\n    const handlePageChange = (newPage) => {\r\n        if (newPage >= 1 && newPage <= totalPages) {\r\n            const newParams = new URLSearchParams(searchParams);\r\n            newParams.set('page', String(newPage));\r\n            setSearchParams(newParams);\r\n            // Scroll to top when page changes\r\n            window.scrollTo({ top: 0, behavior: 'smooth' });\r\n        }\r\n    };\r\n\r\n    const handleTagInputChange = (tag) => {\r\n        setTagsInput(prevTags =>\r\n            prevTags.includes(tag) ? prevTags.filter(t => t !== tag) : [...prevTags, tag]\r\n        );\r\n    };\r\n\r\n    const handleMarkAsSolved = async (problemId, problemPlatform) => {\r\n        if (!userInfo) {\r\n            navigate('/login', { state: { from: location } });\r\n            return;\r\n        }\r\n        try {\r\n            const problemToMark = problems.find(p => p.problemId === problemId && p.platform === problemPlatform);\r\n            await markProblemSolvedAPI({ problemId, platform: problemPlatform, title: problemToMark?.title });\r\n            \r\n            // Optimistically update UI\r\n            setProblems(prev => prev.map(p =>\r\n                (p.problemId === problemId && p.platform === problemPlatform) ? { ...p, isSolvedByCurrentUser: true } : p\r\n            ));\r\n            \r\n            // If status is 'unsolved', refetch to remove it from list\r\n            if (statusInput === 'unsolved') {\r\n                const currentFilters = Object.fromEntries(searchParams.entries());\r\n                fetchProblems({ ...currentFilters, page: currentPage, limit: PROBLEMS_PER_PAGE });\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error marking problem as solved:\", err);\r\n            alert(err.response?.data?.message || \"Could not mark as solved.\");\r\n        }\r\n    };\r\n\r\n    const handleToggleFavorite = async (problem) => {\r\n        if (!userInfo) {\r\n            navigate('/login', { state: { from: location } });\r\n            return;\r\n        }\r\n        const problemDetails = {\r\n            problemId: problem.problemId,\r\n            platform: problem.platform,\r\n            title: problem.title,\r\n            url: problem.url,\r\n            difficulty: problem.difficulty\r\n        };\r\n\r\n        try {\r\n            if (problem.isFavoritedByCurrentUser) {\r\n                await removeProblemFromFavoritesAPI(problem.platform, problem.problemId);\r\n                setProblems(prev => prev.map(p =>\r\n                    (p.problemId === problem.problemId && p.platform === problem.platform) ? { ...p, isFavoritedByCurrentUser: false } : p\r\n                ));\r\n            } else {\r\n                await addProblemToFavoritesAPI(problemDetails);\r\n                setProblems(prev => prev.map(p =>\r\n                    (p.problemId === problem.problemId && p.platform === problem.platform) ? { ...p, isFavoritedByCurrentUser: true } : p\r\n                ));\r\n            }\r\n        } catch (err) {\r\n            console.error(\"Error toggling favorite:\", err);\r\n            alert(err.response?.data?.message || \"Could not update favorite status.\");\r\n        }\r\n    };\r\n\r\n    // Pagination helper function\r\n    const getPageNumbers = () => {\r\n        const delta = 2; // Number of pages to show on each side of current page\r\n        const range = [];\r\n        const rangeWithDots = [];\r\n\r\n        for (let i = Math.max(2, currentPage - delta); i <= Math.min(totalPages - 1, currentPage + delta); i++) {\r\n            range.push(i);\r\n        }\r\n\r\n        if (currentPage - delta > 2) {\r\n            rangeWithDots.push(1, '...');\r\n        } else {\r\n            rangeWithDots.push(1);\r\n        }\r\n\r\n        rangeWithDots.push(...range);\r\n\r\n        if (currentPage + delta < totalPages - 1) {\r\n            rangeWithDots.push('...', totalPages);\r\n        } else if (totalPages > 1) {\r\n            rangeWithDots.push(totalPages);\r\n        }\r\n\r\n        return rangeWithDots;\r\n    };\r\n\r\n    const clearAllFilters = () => {\r\n        setSearchTermInput('');\r\n        setDifficultyInput('');\r\n        setPlatformInput('');\r\n        setTagsInput([]);\r\n        setStatusInput('');\r\n        setSearchParams({ page: '1' }, { replace: true });\r\n    };\r\n\r\n    const getStatusText = () => {\r\n        if (statusInput === 'solved') return 'Solved Problems';\r\n        if (statusInput === 'unsolved') return 'Unsolved Problems';\r\n        return 'All Problems';\r\n    };\r\n\r\n    const getDifficultyColor = (difficulty) => {\r\n        const difficultyLower = difficulty?.toLowerCase();\r\n        if (difficultyLower === 'easy') return 'difficulty-easy';\r\n        if (difficultyLower === 'medium') return 'difficulty-medium';\r\n        if (difficultyLower === 'hard') return 'difficulty-hard';\r\n        \r\n        // Handle Codeforces rating-based difficulties\r\n        const rating = parseInt(difficulty);\r\n        if (!isNaN(rating)) {\r\n            if (rating <= 1200) return 'difficulty-easy';\r\n            if (rating <= 1600) return 'difficulty-medium';\r\n            return 'difficulty-hard';\r\n        }\r\n        \r\n        return 'difficulty-unknown';\r\n    };\r\n\r\n    console.log(\"Rendering ProblemList:\", { isLoading, error, problemsCount: problems.length, totalProblems, currentPage, totalPages });\r\n\r\n    return (\r\n        <div className=\"problem-list-page\">\r\n            <header className=\"problem-list-header\">\r\n                <h1>\r\n                    {getStatusText()}\r\n                    {totalProblems > 0 && (\r\n                        <span className=\"problem-count-info\">\r\n                            - Page {currentPage} of {totalPages} ({totalProblems} total problems)\r\n                        </span>\r\n                    )}\r\n                </h1>\r\n                <div className=\"header-actions\">\r\n                    <button className=\"clear-filters-btn\" onClick={clearAllFilters}>\r\n                        Clear All Filters\r\n                    </button>\r\n                    <button className=\"toggle-filters-btn\" onClick={() => setShowFilters(!showFilters)}>\r\n                        <Filter size={20} />\r\n                        {showFilters ? 'Hide' : 'Show'} Filters\r\n                        {showFilters ? <ChevronUp size={18} /> : <ChevronDown size={18} />}\r\n                    </button>\r\n                </div>\r\n            </header>\r\n\r\n            {showFilters && (\r\n                <div className=\"filters-container\">\r\n                    <div className=\"filter-row\">\r\n                        <div className=\"filter-group search-filter\">\r\n                            <Search size={18} />\r\n                            <input\r\n                                type=\"text\"\r\n                                placeholder=\"Search problems by name or ID...\"\r\n                                value={searchTermInput}\r\n                                onChange={(e) => setSearchTermInput(e.target.value)}\r\n                                onKeyPress={(e) => e.key === 'Enter' && handleApplyFilters()}\r\n                            />\r\n                        </div>\r\n                        <div className=\"filter-group\">\r\n                            <label htmlFor=\"difficulty\">Difficulty:</label>\r\n                            <select id=\"difficulty\" value={difficultyInput} onChange={(e) => setDifficultyInput(e.target.value)}>\r\n                                {availableDifficulties.map(d => <option key={d} value={d === 'All' ? '' : d}>{d}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        <div className=\"filter-group\">\r\n                            <label htmlFor=\"platform\">Platform:</label>\r\n                            <select id=\"platform\" value={platformInput} onChange={(e) => setPlatformInput(e.target.value)}>\r\n                                {availablePlatforms.map(p => <option key={p} value={p === 'All' ? '' : p}>{p}</option>)}\r\n                            </select>\r\n                        </div>\r\n                        {userInfo && (\r\n                            <div className=\"filter-group\">\r\n                                <label htmlFor=\"status\">Status:</label>\r\n                                <select id=\"status\" value={statusInput} onChange={(e) => setStatusInput(e.target.value)}>\r\n                                    <option value=\"\">All</option>\r\n                                    <option value=\"solved\">Solved</option>\r\n                                    <option value=\"unsolved\">Unsolved</option>\r\n                                </select>\r\n                            </div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"filter-group tags-filter\">\r\n                        <label>Tags:</label>\r\n                        <div className=\"tags-options\">\r\n                            {availableTags.map(tag => (\r\n                                <button\r\n                                    key={tag}\r\n                                    className={`tag-btn ${tagsInput.includes(tag) ? 'active' : ''}`}\r\n                                    onClick={() => handleTagInputChange(tag)}\r\n                                >\r\n                                    {tag}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"filter-actions\">\r\n                        <button className=\"apply-filters-btn\" onClick={handleApplyFilters}>\r\n                            Apply Filters\r\n                        </button>\r\n                        <button className=\"clear-filters-btn secondary\" onClick={clearAllFilters}>\r\n                            Clear All\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            )}\r\n\r\n            {isLoading && (\r\n                <div className=\"loading-problems\">\r\n                    <Loader2 size={32} className=\"spinner-icon\" />\r\n                    Loading problems...\r\n                </div>\r\n            )}\r\n\r\n            {error && (\r\n                <div className=\"error-problems\">\r\n                    <AlertTriangle size={20} />\r\n                    {error}\r\n                </div>\r\n            )}\r\n\r\n            {!isLoading && !error && problems.length === 0 && (\r\n                <div className=\"no-problems-found\">\r\n                    <Info size={24} />\r\n                    <h3>No problems found</h3>\r\n                    {totalProblems === 0 ? (\r\n                        <p>No problems match your current filters.</p>\r\n                    ) : (\r\n                        <p>Try adjusting your filters or go to a different page.</p>\r\n                    )}\r\n                    <button onClick={clearAllFilters} className=\"clear-filters-btn\">\r\n                        Clear All Filters\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {!isLoading && !error && problems.length > 0 && (\r\n                <>\r\n                    {/* Improved Pagination Controls - Top */}\r\n                    {totalPages > 1 && (\r\n                        <div className=\"pagination-controls top\">\r\n                            <div className=\"pagination-info\">\r\n                                Showing {((currentPage - 1) * PROBLEMS_PER_PAGE) + 1} - {Math.min(currentPage * PROBLEMS_PER_PAGE, totalProblems)} of {totalProblems} problems\r\n                            </div>\r\n                            <div className=\"pagination-buttons\">\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage - 1)}\r\n                                    disabled={currentPage <= 1}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    <ChevronLeft size={18} /> Previous\r\n                                </button>\r\n\r\n                                {getPageNumbers().map((pageNum, index) => (\r\n                                    <button\r\n                                        key={index}\r\n                                        onClick={() => typeof pageNum === 'number' && handlePageChange(pageNum)}\r\n                                        disabled={pageNum === '...'}\r\n                                        className={`pagination-btn ${pageNum === currentPage ? 'active' : ''} ${pageNum === '...' ? 'dots' : ''}`}\r\n                                    >\r\n                                        {pageNum === '...' ? <MoreHorizontal size={16} /> : pageNum}\r\n                                    </button>\r\n                                ))}\r\n\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage + 1)}\r\n                                    disabled={currentPage >= totalPages}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    Next <ChevronRight size={18} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n\r\n                    <div className=\"problems-list-view\">\r\n                        <div className=\"problem-list-row header-row\">\r\n                            <div className=\"problem-list-status-col\">Status</div>\r\n                            <div className=\"problem-list-title-col\">Title</div>\r\n                            <div className=\"problem-list-platform-col\">Platform</div>\r\n                            <div className=\"problem-list-difficulty-col\">Difficulty</div>\r\n                            <div className=\"problem-list-tags-col\">Tags</div>\r\n                            <div className=\"problem-list-actions-col\">Actions</div>\r\n                        </div>\r\n                        {problems.map((problem) => (\r\n                            <div key={`${problem.platform}-${problem.problemId}`} className={`problem-list-row ${problem.isSolvedByCurrentUser ? 'solved' : ''}`}>\r\n                                <div className=\"problem-list-status-col\">\r\n                                    {problem.isSolvedByCurrentUser ? (\r\n                                        <CheckCircle size={20} className=\"solved-icon\" title=\"Solved\" />\r\n                                    ) : (\r\n                                        <div className=\"unsolved-icon\" title=\"Unsolved\"></div>\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"problem-list-title-col\">\r\n                                    <a\r\n                                        href={problem.url}\r\n                                        target=\"_blank\"\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"problem-title-link\"\r\n                                    >\r\n                                        {problem.title}\r\n                                        <ExternalLink size={14} className=\"external-link-icon\" />\r\n                                    </a>\r\n                                    <div className=\"problem-id\">{problem.problemId}</div>\r\n                                </div>\r\n                                <div className=\"problem-list-platform-col\">\r\n                                    <span className={`platform-badge platform-${problem.platform?.toLowerCase()}`}>\r\n                                        {problem.platform}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"problem-list-difficulty-col\">\r\n                                    <span className={`difficulty-badge ${getDifficultyColor(problem.difficulty)}`}>\r\n                                        {problem.difficulty}\r\n                                    </span>\r\n                                </div>\r\n                                <div className=\"problem-list-tags-col\">\r\n                                    <div className=\"tags-container\">\r\n                                        {problem.tags?.slice(0, 3).map((tag, index) => (\r\n                                            <span key={index} className=\"tag-badge\">\r\n                                                {tag}\r\n                                            </span>\r\n                                        ))}\r\n                                        {problem.tags?.length > 3 && (\r\n                                            <span className=\"tag-badge more-tags\">\r\n                                                +{problem.tags.length - 3} more\r\n                                            </span>\r\n                                        )}\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"problem-list-actions-col\">\r\n                                    {userInfo && (\r\n                                        <div className=\"problem-actions\">\r\n                                            {!problem.isSolvedByCurrentUser && (\r\n                                                <button\r\n                                                    onClick={() => handleMarkAsSolved(problem.problemId, problem.platform)}\r\n                                                    className=\"action-btn solve-btn\"\r\n                                                    title=\"Mark as solved\"\r\n                                                >\r\n                                                    <ListChecks size={16} />\r\n                                                </button>\r\n                                            )}\r\n                                            <button\r\n                                                onClick={() => handleToggleFavorite(problem)}\r\n                                                className={`action-btn favorite-btn ${problem.isFavoritedByCurrentUser ? 'favorited' : ''}`}\r\n                                                title={problem.isFavoritedByCurrentUser ? \"Remove from favorites\" : \"Add to favorites\"}\r\n                                            >\r\n                                                {problem.isFavoritedByCurrentUser ? (\r\n                                                    <Star size={16} className=\"star-filled\" />\r\n                                                ) : (\r\n                                                    <StarOff size={16} />\r\n                                                )}\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* Improved Pagination Controls - Bottom */}\r\n                    {totalPages > 1 && (\r\n                        <div className=\"pagination-controls bottom\">\r\n                            <div className=\"pagination-info\">\r\n                                Showing {((currentPage - 1) * PROBLEMS_PER_PAGE) + 1} - {Math.min(currentPage * PROBLEMS_PER_PAGE, totalProblems)} of {totalProblems} problems\r\n                            </div>\r\n                            <div className=\"pagination-buttons\">\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage - 1)}\r\n                                    disabled={currentPage <= 1}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    <ChevronLeft size={18} /> Previous\r\n                                </button>\r\n\r\n                                {getPageNumbers().map((pageNum, index) => (\r\n                                    <button\r\n                                        key={index}\r\n                                        onClick={() => typeof pageNum === 'number' && handlePageChange(pageNum)}\r\n                                        disabled={pageNum === '...'}\r\n                                        className={`pagination-btn ${pageNum === currentPage ? 'active' : ''} ${pageNum === '...' ? 'dots' : ''}`}\r\n                                    >\r\n                                        {pageNum === '...' ? <MoreHorizontal size={16} /> : pageNum}\r\n                                    </button>\r\n                                ))}\r\n\r\n                                <button\r\n                                    onClick={() => handlePageChange(currentPage + 1)}\r\n                                    disabled={currentPage >= totalPages}\r\n                                    className=\"pagination-btn\"\r\n                                >\r\n                                    Next <ChevronRight size={18} />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProblemListPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}